{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/quiz.service.ts","webpack:///./src/app/quiz/quiz.component.css","webpack:///./src/app/quiz/quiz.component.html","webpack:///./src/app/quiz/quiz.component.ts","webpack:///./src/app/results/results.component.css","webpack:///./src/app/results/results.component.html","webpack:///./src/app/results/results.component.ts","webpack:///./src/app/scores/scores.component.css","webpack:///./src/app/scores/scores.component.html","webpack:///./src/app/scores/scores.component.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<nav>\\n  <a routerLink=\\\"/quiz\\\" routerLinkActive=\\\"active\\\">Quiz</a>\\n  <a routerLink=\\\"/scores\\\" routerLinkActive=\\\"active\\\">Scores</a>\\n</nav>\\n\\n <router-outlet></router-outlet>\\n\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'trivia';\n}\n","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { HttpClientModule } from \"@angular/common/http\";\nimport { RouterModule, Routes } from \"@angular/router\";\nimport { AppComponent } from './app.component';\nimport { QuizComponent } from './quiz/quiz.component';\nimport { ResultsComponent } from './results/results.component';\nimport { QuizService } from './quiz.service';\nimport { ScoresComponent } from './scores/scores.component';\nimport { FormsModule } from \"@angular/forms\";\n\n\nconst appRoutes: Routes = [ \n  { path: \"\", redirectTo: \"/quiz\", pathMatch: \"full\" }, \n  { path: \"quiz\", component: QuizComponent },\n  { path: \"results\", component: ResultsComponent },\n  { path: \"scores\", component: ScoresComponent }\n\n];\n\n@NgModule({\n  declarations: [\n    AppComponent, QuizComponent, ResultsComponent,\n    ScoresComponent\n  ],\n  imports: [\n    BrowserModule, HttpClientModule, FormsModule,\n    RouterModule.forRoot(appRoutes)\n  ],\n  providers: [QuizService],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","import { Injectable } from \"@angular/core\";\nimport { HttpClient } from \"@angular/common/http\";\n\n@Injectable({\n  providedIn: \"root\"\n})\nexport class QuizService {\n\n  questions: any;\n  currentuser: any;\n  answerTally: any;\n\n  constructor(private http: HttpClient) {}\n\n  getQuestions() {\n    return this.http.get(\"/api/questions\", {responseType: \"json\"});\n  }\n\n  setUserQuestions (userquestions) {\n    this.questions = userquestions;\n  }\n\n  getUserQuestions() {\n    return this.questions;\n  }\n\n  getScores() {\n    return this.http.get(\"/api/scores\", {responseType: \"json\"});\n  }\n\n  //trying to figure out how to get the username/score of the current user, so I can make that available in the service\n  getCurrentUserScore() {\n    return this.http.get(\"/api/scores\", {responseType: \"json\"});\n\n  }\n\n  submitScore(userscore: any) {\n\n    return this.http\n      .post(\"/api/scores\", userscore, { responseType: \"json\" });\n    \n  }\n}\n","module.exports = \".wrapper {\\n  display: flex;\\n  justify-content: center;\\n}\\n\\n.grid {\\n  display: grid;\\n  max-width: 800px;\\n  grid-template-columns: 1fr;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvcXVpei9xdWl6LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7RUFDRSxhQUFhO0VBQ2IsdUJBQXVCO0FBQ3pCOztBQUVBO0VBQ0UsYUFBYTtFQUNiLGdCQUFnQjtFQUNoQiwwQkFBMEI7QUFDNUIiLCJmaWxlIjoic3JjL2FwcC9xdWl6L3F1aXouY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi53cmFwcGVyIHtcbiAgZGlzcGxheTogZmxleDtcbiAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XG59XG5cbi5ncmlkIHtcbiAgZGlzcGxheTogZ3JpZDtcbiAgbWF4LXdpZHRoOiA4MDBweDtcbiAgZ3JpZC10ZW1wbGF0ZS1jb2x1bW5zOiAxZnI7XG59Il19 */\"","module.exports = \"<div class=\\\"wrapper\\\">\\n\\n<div class=\\\"grid\\\">\\n<h2>quiz</h2>\\n<form  \\n#startForm=\\\"ngForm\\\" action=\\\"\\\">\\n  <label for=\\\"\\\">Enter Your Name:</label>\\n  <input type=\\\"text\\\" name=\\\"name\\\" ngModel/> <span>{{ name }}</span>\\n  <button (click)=\\\"startQuiz(startForm.form)\\\">Start Quiz</button>\\n</form>\\n\\n<form \\n *ngIf=\\\"quizStarted\\\"\\n#quizForm=\\\"ngForm\\\" (ngSubmit)=\\\"submitQuiz()\\\">\\n  <div *ngFor=\\\"let question of questions; index as i\\\">\\n    <p>{{ question.question_name }}</p>\\n    <label for=\\\"\\\">{{ question.choice_1 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"{{ i }}\\\"\\n      (change)=\\\"checkCorrect(question.choice_1, question.answer)\\\"\\n      value=\\\"{{ question.choice_1 }}\\\"\\n    />\\n    <label for=\\\"\\\">{{ question.choice_2 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"{{ i }}\\\"\\n      (change)=\\\"checkCorrect(question.choice_2, question.answer)\\\"\\n      value=\\\"{{ question.choice_2 }}\\\"\\n    />\\n    <label for=\\\"\\\">{{ question.choice_3 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"{{ i }}\\\"\\n      (change)=\\\"checkCorrect(question.choice_3, question.answer)\\\"\\n      value=\\\"{{ question.choice_3 }}\\\"\\n    />\\n    <label for=\\\"\\\">{{ question.choice_4 }}</label>\\n    <input\\n      type=\\\"radio\\\"\\n      name=\\\"{{ i }}\\\"\\n      (change)=\\\"checkCorrect(question.choice_4, question.answer)\\\"\\n      value=\\\"{{ question.choice_4 }}\\\"\\n    />\\n  </div>\\n\\n  <button>Submit your quiz</button>\\n</form>\\n</div>\\n\\n</div>\\n\"","import { Component, OnInit } from \"@angular/core\";\nimport { QuizService } from \"../quiz.service\";\nimport { Router } from \"@angular/router\";\n\n@Component({\n  selector: \"quiz\",\n  templateUrl: \"./quiz.component.html\",\n  styleUrls: [\"./quiz.component.css\"],\n  providers: [QuizService]\n})\nexport class QuizComponent implements OnInit {\n  questions: any;\n  answerTally: number = 0;\n  username: string;\n  quizStarted: boolean;\n  finalscore: any;\n  userscore: any;\n\n  constructor(private quizService: QuizService, private router: Router) {\n    this.quizService.getQuestions().subscribe(response => {\n      this.questions = response;\n    });\n  }\n\n  ngOnInit() {}\n\n  startQuiz(form) {\n    this.username = form.value.name;\n    this.quizStarted = !this.quizStarted;\n  }\n\n  submitQuiz() {\n    this.quizService\n      .submitScore({\n        username: this.username,\n        score: this.answerTally\n      })\n      .subscribe(response => {\n        this.userscore = response;\n        this.router.navigate([\"results\"]);\n      });\n    this.quizService.setUserQuestions(this.questions);\n  }\n\n  checkCorrect(choice: any, answer: any): any {\n    if (choice === answer) {\n      this.answerTally++;\n      //mitch sets it is\n    }\n  }\n\n  // sendQuestions() {\n  //   console.log(\"it fires\");\n\n  // }\n\n  // checkCorrect(choice: any, answer: any): any {\n\n  //   this.quizService.getScore(choice, answer).subscribe(response => {\n  //     this.finalscore = response;\n  //     //console.log(this.finalscore);\n\n  //   });\n\n  // }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Jlc3VsdHMvcmVzdWx0cy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\\n<h1>Results</h1>\\n\\n<div>\\n<h2>Your Score</h2>\\n\\n\\n</div>\\n\\n<section>\\n<h2>Correct Answers</h2>\\n\\n<div *ngFor=\\\"let question of questions\\\">\\n<p> {{  question.question_name }} </p>\\n<p> {{ question.choice_1 }} </p>\\n<p> {{ question.choice_2 }} </p>\\n<p> {{ question.choice_3 }} </p>\\n<p> {{ question.choice_4 }} </p>\\n<p>CORRECT ANSWER: {{ question.answer }} </p>\\n\\n</div>\\n\\n</section>\\n\\n<a routerLink=\\\"/scores\\\" routerLinkActive=\\\"active\\\">Compare Scores</a>\"","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../quiz.service';\n\n@Component({\n  selector: 'app-results',\n  templateUrl: './results.component.html',\n  styleUrls: ['./results.component.css']\n})\nexport class ResultsComponent implements OnInit {\n\n  //questions: any;\n  questions: any\n  currentuser: any;\n\n  constructor(private quizService: QuizService) {\n\n    // this.quizService.getQuestions().subscribe(response => {\n    //   this.questions = response;\n    // });\n\n\n\n    this.quizService.getCurrentUserScore().subscribe(response => {\n      this.currentuser = response;\n    });\n   }\n\n  ngOnInit() {\n    \n    this.questions = this.quizService.getUserQuestions();\n    console.log(this.questions);\n    \n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3Njb3Jlcy9zY29yZXMuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h1>Scores</h1>\\n\\n<div *ngFor=\\\"let score of scores\\\">\\n\\n  <p> {{ score.username }} </p>\\n  <p> {{ score.score }} </p>\\n\\n\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { QuizService } from '../quiz.service';\n\n@Component({\n  selector: 'app-scores',\n  templateUrl: './scores.component.html',\n  styleUrls: ['./scores.component.css']\n})\nexport class ScoresComponent implements OnInit {\n\n  scores: any;\n\n  constructor(private quizService: QuizService) {\n    this.quizService.getScores().subscribe(response => {\n      this.scores = response;\n    });\n\n   }\n\n  ngOnInit() {\n  }\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":""}